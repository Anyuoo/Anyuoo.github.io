<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Virtual Life</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://anyuoo.github.io/"/>
  <updated>2020-03-06T14:05:43.389Z</updated>
  <id>http://anyuoo.github.io/</id>
  
  <author>
    <name>Anyuoo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>排序算法（一）</title>
    <link href="http://anyuoo.github.io/2020/03/06/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://anyuoo.github.io/2020/03/06/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-03-06T13:37:11.000Z</published>
    <updated>2020-03-06T14:05:43.389Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-优化后的冒泡排序-内排序，稳定"><a href="#1-优化后的冒泡排序-内排序，稳定" class="headerlink" title="1. 优化后的冒泡排序  内排序，稳定"></a>1. <strong>优化后的冒泡排序</strong>  <code>内排序，稳定</code></h4><p>平均时间复杂度：<em>O(n^2)</em> 最好情况：<em>O(n)</em> 最坏情况：<em>O(n^2)</em> 空间复杂度：<em>O（1）</em><br>  <code>/**         * 冒泡排序 由大到小         */        public int[] bubbleSort(){            int times;            boolean need=true;//判断后面数据是否需要排序            //每一次找的最小数，放最后，n个数就进行n-1次循环            for (times=1; times&lt; length; times++) {                if (need == false)                    break;                need = false;                for (int pointer = 1; pointer &lt;= length - times; pointer++) {                    if (nums[pointer - 1] &lt; nums[pointer]) {                        need = true;//顺序变动，需要再次排序                        swap(pointer, pointer - 1);                    }                }            }            return nums;        }</code></p><h4 id="2-选择排序-内排序，不稳定"><a href="#2-选择排序-内排序，不稳定" class="headerlink" title="2. 选择排序 内排序，不稳定"></a>2. <strong>选择排序</strong> <code>内排序，不稳定</code></h4><p> 平均时间复杂度：<em>O(n^2)</em> 最好情况：<em>O(n^2)</em> 最坏情况：<em>O(n^2)</em> 空间复杂度：<em>O（1）</em><br>    <code>/**         * 选择排序，每次选择最大的依次放前面         */        public int[] selectionSort(){            int max_index;//最大值下标            //tail 作为已排序的尾，可做排序次数            for (int tail = 0; tail &lt;length-1 ; tail++) {                max_index = tail;                for (int pointer = tail + 1; pointer &lt; length; pointer++) {                    if (nums[max_index] &lt; nums[pointer]) {                        max_index=pointer;                    }                }                swap(max_index, tail);            }            return nums;        }</code></p><h4 id="3-插入排序-内排序，稳定"><a href="#3-插入排序-内排序，稳定" class="headerlink" title="3.插入排序 内排序，稳定"></a>3.<strong>插入排序</strong> <code>内排序，稳定</code></h4><p> 平均时间复杂度：<em>O(n^2)</em> 最好情况：<em>O(n)</em> 最坏情况：<em>O(n^2)</em> 空间复杂度：<em>O（1）</em><br><code>/**         * 插入排序,由大到小         */        public int[] insertionSort(){            int tem;            //tail表示已排好序的尾部            for ( int tail=0;tail&lt;length-1;tail++){                tem = nums[tail + 1];                while (tail &gt;= 0 &amp;&amp; tem &gt; nums[tail]) {//tail&gt;=0 与 tem &gt; nums[tail] 两个判断条件不能互换                    nums[tail + 1] = nums[tail];                    tail--;                }                nums[tail + 1] = tem;            }            return nums;        }</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-优化后的冒泡排序-内排序，稳定&quot;&gt;&lt;a href=&quot;#1-优化后的冒泡排序-内排序，稳定&quot; class=&quot;headerlink&quot; title=&quot;1. 优化后的冒泡排序  内排序，稳定&quot;&gt;&lt;/a&gt;1. &lt;strong&gt;优化后的冒泡排序&lt;/strong&gt;  &lt;co
      
    
    </summary>
    
    
      <category term="算法" scheme="http://anyuoo.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法 排序" scheme="http://anyuoo.github.io/tags/%E7%AE%97%E6%B3%95-%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>模板</title>
    <link href="http://anyuoo.github.io/2020/03/02/%E6%A8%A1%E6%9D%BF/"/>
    <id>http://anyuoo.github.io/2020/03/02/%E6%A8%A1%E6%9D%BF/</id>
    <published>2020-03-02T12:12:11.217Z</published>
    <updated>2020-03-02T12:13:02.789Z</updated>
    
    <content type="html"><![CDATA[<p>title: Linux文件系统操作命令 </p><p>comment: true<br>categories:<br>tags: </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title: Linux文件系统操作命令 &lt;/p&gt;
&lt;p&gt;comment: true&lt;br&gt;categories:&lt;br&gt;tags: &lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Linux权限命令（1）--chmod</title>
    <link href="http://anyuoo.github.io/2020/03/02/Linux%E6%9D%83%E9%99%90%E5%91%BD%E4%BB%A4%EF%BC%881%EF%BC%89--chmod/"/>
    <id>http://anyuoo.github.io/2020/03/02/Linux%E6%9D%83%E9%99%90%E5%91%BD%E4%BB%A4%EF%BC%881%EF%BC%89--chmod/</id>
    <published>2020-03-02T12:07:11.000Z</published>
    <updated>2020-03-06T13:38:21.983Z</updated>
    
    <content type="html"><![CDATA[<p>chmod <code>change the permissions mode od a file</code>改变文件或目录权限 命令路径：<em>/bin/chmod</em><br>语法：<br>    * chmod [{ugoa}{+-=}{rwx}] [文件或目录]<br>    * chmod [mode=421 ] [文件或目录]<br>参数：<br>    * u <code>user</code> 所有者<br>    * g <code>group</code> 所属组<br>    * o <code>other</code> 其他人<br>    * a <code>all</code> 所有人<br>    * r <code>read</code>读权限 数字表示–&gt;<strong>4</strong><br>    * w <code>write</code> 写权限 数字表示–&gt;<strong>2</strong><br>    * x <code>execute</code> 执行权限 数字表示–&gt;<strong>1</strong><br>    * -R 可递归赋给子文件夹相同权限<br><img src="/2020/03/02/Linux%E6%9D%83%E9%99%90%E5%91%BD%E4%BB%A4%EF%BC%881%EF%BC%89--chmod/chmod.chmod.jpg" alt><br>由图可知，文件夹 <em>Videos</em> 权限是 <strong>rwxr-xr-x</strong> ， 每三个一组，从左到右分别是<br>    * 所有者权限：rwx <code>4+2+1=7</code><br>    * 所有组权限：r-x <code>4+1=5</code><br>    * 其他人权限：r-x <code>4+1=5</code><br>用数字赋值权限：chmod 755 [文件或目录]<br>    对于目录：rx代表可以查看和进目录，权限一般同时出现<br>    对于目录中文件的删除执行不是看文件权限而是看目录权限</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;chmod &lt;code&gt;change the permissions mode od a file&lt;/code&gt;改变文件或目录权限 命令路径：&lt;em&gt;/bin/chmod&lt;/em&gt;&lt;br&gt;语法：&lt;br&gt;    * chmod [{ugoa}{+-=}{rwx}] [文件或目
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://anyuoo.github.io/categories/Linux/"/>
    
    
      <category term="Centos" scheme="http://anyuoo.github.io/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>Linux文件系统操作命令</title>
    <link href="http://anyuoo.github.io/2020/02/28/Linux%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/"/>
    <id>http://anyuoo.github.io/2020/02/28/Linux%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/</id>
    <published>2020-02-28T07:31:24.000Z</published>
    <updated>2020-03-01T08:10:01.754Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-ls-list-显示目录文件-命令所在路径-bin-ls"><a href="#1-ls-list-显示目录文件-命令所在路径-bin-ls" class="headerlink" title="1.  ls  list 显示目录文件  命令所在路径 : /bin/ls"></a>1.  <strong>ls</strong>  <code>list</code> 显示目录文件  命令所在路径 : <em>/bin/ls</em></h4><pre><code>语法：ls 选项[-ldi] [文件或目录]* -l `long` 长格式显示，详细信息显示* -h `human` 以人可读方式显示数据大小* -i `iNode` 显示文件的i节点号* -d `direction` 查看目录属性* -a `all` 显示所有文件，包括隐藏文件</code></pre><p><code>ps:设立隐藏文件主要为了将系统文件隐藏，避免用户误操作</code></p><h4 id="2-mkdir-make-directeries-创建目录-命令所在路径：-bin-mkdir"><a href="#2-mkdir-make-directeries-创建目录-命令所在路径：-bin-mkdir" class="headerlink" title="2. mkdir make directeries 创建目录 命令所在路径：/bin/mkdir"></a>2. <strong>mkdir</strong> <code>make directeries</code> 创建目录 命令所在路径：<em>/bin/mkdir</em></h4><pre><code>语法：mkdir 选项[-p] [目录名称]* -p 递归创建多级文件夹</code></pre><h4 id="3-rmdirremove-directeries-删除空目录-命令所在路径：-bin-rmdir"><a href="#3-rmdirremove-directeries-删除空目录-命令所在路径：-bin-rmdir" class="headerlink" title="3. rmdirremove directeries 删除空目录 命令所在路径：/bin/rmdir"></a>3. <strong>rmdir</strong><code>remove directeries</code> 删除空目录 命令所在路径：<em>/bin/rmdir</em></h4><pre><code>语法：rmdir [目录名]</code></pre><h4 id="4-rm-remove-删除目录或文件-命令所在路径：-bin-rm"><a href="#4-rm-remove-删除目录或文件-命令所在路径：-bin-rm" class="headerlink" title="4. rm remove 删除目录或文件 命令所在路径：/bin/rm"></a>4. <strong>rm</strong> <code>remove</code> 删除目录或文件 命令所在路径：<em>/bin/rm</em></h4><pre><code>语法：rm 选项[-rf] [目录名或文件名]* -r 递归删除，一次删除多级文件* -f `force` 强制执行</code></pre><h4 id="5-cp-copy-复制文件或目录-命令所在路径：-bin-cp"><a href="#5-cp-copy-复制文件或目录-命令所在路径：-bin-cp" class="headerlink" title="5.cp copy 复制文件或目录 命令所在路径：/bin/cp"></a>5.<strong>cp</strong> <code>copy</code> 复制文件或目录 命令所在路径：<em>/bin/cp</em></h4><pre><code>语法：cp -rp [原文件或目录] [目标目录]* -r 复制目录* -p 保留文件属性</code></pre><h4 id="6-touch-创建空文件夹-命令所在路径：-bin-touch"><a href="#6-touch-创建空文件夹-命令所在路径：-bin-touch" class="headerlink" title="6.touch 创建空文件夹 命令所在路径：/bin/touch"></a>6.<strong>touch</strong> 创建空文件夹 命令所在路径：<em>/bin/touch</em></h4><pre><code>语法：touch [文件名]</code></pre><h4 id="7-cat-显示文件内容-命令所在路径：-bin-cat"><a href="#7-cat-显示文件内容-命令所在路径：-bin-cat" class="headerlink" title="7. cat 显示文件内容 命令所在路径：/bin/cat"></a>7. <strong>cat</strong> 显示文件内容 命令所在路径：<em>/bin/cat</em></h4><pre><code>语法：cat 选项[-n b] [文件名]* -n `number` 由 1 开始对所有输出的行数编号* -b `number nonblan` 和 -n 相似，只不过对于空白行不编号</code></pre><h4 id="8-more-分页显示文件内容-命令所在路径：-bin-more"><a href="#8-more-分页显示文件内容-命令所在路径：-bin-more" class="headerlink" title="8. more 分页显示文件内容 命令所在路径：/bin/more"></a>8. <strong>more</strong> 分页显示文件内容 命令所在路径：<em>/bin/more</em></h4><pre><code>语法：more 选项[-num +num ] [文件名]* -num `number` 一次显示的行数* +num `number` 从第 num 行开始显示常用操作命令：* Enter 向下n行，需要定义。默认为1行* Ctrl+F 向下滚动一屏* 空格键 向下滚动一屏* Ctrl+B 返回上一屏* = 输出当前行的行号* ：f 输出文件名和当前行的行号* V 调用vi编辑器* !命令 调用Shell，并执行命令* q 退出more</code></pre><h4 id="9-less-less-与-more-类似，但使用-less-可以随意浏览文件，而-more-仅能向前移动，却不能向后移动，而且-less-在查看之前不会加载整个文件"><a href="#9-less-less-与-more-类似，但使用-less-可以随意浏览文件，而-more-仅能向前移动，却不能向后移动，而且-less-在查看之前不会加载整个文件" class="headerlink" title="9. less less 与 more 类似，但使用 less 可以随意浏览文件，而 more 仅能向前移动，却不能向后移动，而且 less 在查看之前不会加载整个文件"></a>9. <strong>less</strong> less 与 more 类似，但使用 less 可以随意浏览文件，而 more 仅能向前移动，却不能向后移动，而且 less 在查看之前不会加载整个文件</h4><pre><code>语法：less [文件名]</code></pre><h4 id="10-head-显示文件前几行-命令所在路径：usr-bin-head"><a href="#10-head-显示文件前几行-命令所在路径：usr-bin-head" class="headerlink" title="10. head 显示文件前几行 命令所在路径：usr/bin/head"></a>10. <strong>head</strong> 显示文件前几行 命令所在路径：<em>usr/bin/head</em></h4><pre><code>语法：head [文件名]* -n 指定行数</code></pre><h4 id="11-tail-显示文件后面几行-命令所在路径：-usr-bin-tail"><a href="#11-tail-显示文件后面几行-命令所在路径：-usr-bin-tail" class="headerlink" title="11. tail 显示文件后面几行 命令所在路径：/usr/bin/tail"></a>11. <strong>tail</strong> 显示文件后面几行 命令所在路径：<em>/usr/bin/tail</em></h4><pre><code>语法：tail [文件名]* -n 指定行数* -f 动态显示</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-ls-list-显示目录文件-命令所在路径-bin-ls&quot;&gt;&lt;a href=&quot;#1-ls-list-显示目录文件-命令所在路径-bin-ls&quot; class=&quot;headerlink&quot; title=&quot;1.  ls  list 显示目录文件  命令所在路径 : /b
      
    
    </summary>
    
    
      <category term="Linux" scheme="http://anyuoo.github.io/categories/Linux/"/>
    
    
      <category term="Centos" scheme="http://anyuoo.github.io/tags/Centos/"/>
    
  </entry>
  
</feed>
